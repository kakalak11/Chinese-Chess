{"version":3,"sources":["../../../../../assets/core/Board/assets/core/Board/BoardManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/core/Board","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BoardManager extends cc.Component {\n    @property(cc.Prefab)\n    chessPiecePrefab: cc.Prefab = null;\n\n    @property(cc.Node)\n    topSideHolder: cc.Node = null;\n\n    @property(cc.Node)\n    bottomSideHolder: cc.Node = null;\n\n    redColor: cc.Color;\n    blueColor: cc.Color;\n    chessPieces: cc.Node[];\n    pawnIndex: number;\n    selectedChess: cc.Node;\n    targetChess: cc.Node;\n    selectedPosition: cc.Vec2;\n    _moveTween: cc.Tween;\n\n    protected onLoad(): void {\n        this.node.on('INIT', this.init, this);\n        this.node.on('CHESS_SELECT', this.onChessSelect, this);\n        this.node.on('CHESS_UNSELECT', this.onChessUnselect, this);\n\n        this.redColor = cc.Color.RED;\n        this.blueColor = cc.Color.BLUE;\n    };\n\n    protected init(): void {\n        const { CHESS_LAYOUT, CHESS_INFO, CHESS_SIZE } = (this.node as any).config;\n        this.chessPieces = [];\n\n        //init for the bottom side\n        for (let chessIndex = 0; chessIndex < CHESS_LAYOUT.length; chessIndex++) {\n            const chessName = CHESS_LAYOUT[chessIndex];\n            const chessPiece = cc.instantiate(this.chessPiecePrefab);\n            chessPiece.parent = this.bottomSideHolder;\n            (chessPiece as any).sprite.color = this.redColor;\n            (chessPiece as any).init(CHESS_INFO[chessName], chessName, CHESS_SIZE);\n            let position;\n            if (chessIndex > 5) {\n                position = this._getPosition(CHESS_INFO[chessName], true, true);\n            } else {\n                position = this._getPosition(CHESS_INFO[chessName], true);\n            }\n            chessPiece.setPosition(position);\n            this.chessPieces.push(chessPiece);\n        }\n\n        this.pawnIndex = 0;\n\n        //init for the top side\n        for (let chessIndex = 0; chessIndex < CHESS_LAYOUT.length; chessIndex++) {\n            const chessName = CHESS_LAYOUT[chessIndex];\n            const chessPiece = cc.instantiate(this.chessPiecePrefab);\n            chessPiece.parent = this.topSideHolder;\n            (chessPiece as any).sprite.color = this.blueColor;\n            // chessPiece.rotation = 180;\n            chessPiece.scaleY = -1;\n            (chessPiece as any).init(CHESS_INFO[chessName], chessName, CHESS_SIZE);\n            let position;\n            if (chessIndex > 5) {\n                position = this._getPosition(CHESS_INFO[chessName], false, true);\n            } else {\n                position = this._getPosition(CHESS_INFO[chessName], false);\n            }\n            chessPiece.setPosition(position);\n            this.chessPieces.push(chessPiece);\n        }\n\n        this.node.emit('INIT_CALLBACK', this.onClickPosition);\n    };\n\n    private _getPosition({ stepX = 0, stepY = 0, isPawn = false }, botSide, isReverse = false): cc.Vec2 {\n        const { STEP, BORDER_LEFT_BOARD, BORDER_TOP_BOARD, BORDER_BOTTOM_BOARD } = (this.node as any).config;\n        if (botSide) {\n            if (isPawn) {\n                if (!this.pawnIndex) this.pawnIndex = 0;\n                const xPosition = BORDER_LEFT_BOARD + this.pawnIndex * STEP * 2;\n                const yPosition = BORDER_BOTTOM_BOARD + stepY * STEP;\n                this.pawnIndex++;\n                return cc.v2(xPosition, yPosition);\n            }\n\n            const xPosition = 0 + stepX * STEP;\n            const yPosition = BORDER_BOTTOM_BOARD + stepY * STEP;\n            if (isReverse) {\n                return cc.v2(-xPosition, yPosition);\n            } else {\n                return cc.v2(xPosition, yPosition);\n            }\n        } else {\n            if (isPawn) {\n                if (!this.pawnIndex) this.pawnIndex = 0;\n                const xPosition = BORDER_LEFT_BOARD + this.pawnIndex * STEP * 2;\n                const yPosition = BORDER_TOP_BOARD - stepY * STEP;\n                this.pawnIndex++;\n                return cc.v2(xPosition, yPosition);\n            }\n\n            const xPosition = 0 + stepX * STEP;\n            const yPosition = BORDER_TOP_BOARD - stepY * STEP;\n            if (isReverse) {\n                return cc.v2(-xPosition, yPosition);\n            } else {\n                return cc.v2(xPosition, yPosition);\n            }\n        }\n    };\n\n    protected onChessSelect(event): void {\n        event.stopPropagation();\n        if (event.target === this.selectedChess && event.target !== null) {\n            this.selectedChess.emit('RESET');\n            this.selectedChess = null;\n            return;\n        }\n\n        if (!this.selectedChess) {\n            this.selectedChess = event.target;\n            return;\n        }\n\n        if (!this.targetChess && !this.selectedPosition) {\n            this.targetChess = event.target;\n        }\n    };\n\n    protected onChessUnselect(event): void {\n        event.stopPropagation();\n        this.selectedChess = null;\n    };\n\n    protected onClickPosition(position: cc.Vec2): void {\n        const isMove = callback.bind(this);\n        if (!position || !isMove(position)) return;\n        const { TIME_TWEEN_MOVE } = (this.node as any).config;\n        this._moveTween = cc.tween(this.selectedChess)\n            .to(TIME_TWEEN_MOVE, { position: position })\n            .call(this.updatePosition)\n            .start();\n\n        function callback(position): boolean {\n            if (!this.selectedChess) return false;\n            const { STEP } = (this.node as any).config;\n\n            const currentX = this.selectedChess.getPosition().x;\n            const currentY = this.selectedChess.getPosition().y;\n\n            if (!(position.x < (currentX + STEP) && position.x > (currentX - STEP))) return false;\n            if (!(position.y < (currentY + STEP) && position.y > (currentY - STEP))) return false;\n\n            return true;\n        }\n    }\n\n    updatePosition() {\n        this.selectedChess.updatePosition();\n    }\n\n    resetMove() {\n        this.selectedChess = null;\n        this.targetChess = null;\n        this.selectedPosition = null;\n    }\n};\n"]}