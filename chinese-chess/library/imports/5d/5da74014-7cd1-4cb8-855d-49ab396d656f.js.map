{"version":3,"sources":["../../../../../assets/core/Board/assets/core/Board/BoardMapComponent.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAA+C,qCAAY;IAD3D;QAAA,qEA2BC;QAxBG,6BAAuB,GAAc,IAAI,CAAC;;IAwB9C,CAAC;IArBa,kCAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAAA,CAAC;IAEQ,gCAAI,GAAd;QACU,IAAA,qBAAuF,EAArF,8BAAY,EAAE,wCAAiB,EAAE,sCAAgB,EAAE,cAAkC,CAAC;QAC9F,IAAM,mBAAmB,GAAG,YAAY,CAAC,MAAM,CAAC;QAChD,IAAM,gBAAgB,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAGzC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,mBAAmB,EAAE,GAAG,EAAE,EAAE;YAChD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,gBAAgB,EAAE,GAAG,EAAE,EAAE;gBAC7C,IAAM,IAAI,GAAG,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC;gBAC5C,IAAM,IAAI,GAAG,gBAAgB,GAAG,GAAG,GAAG,IAAI,CAAC;gBAE3C,IAAM,qBAAqB,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBAC3E,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzC,qBAAqB,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aACxD;SACJ;IACL,CAAC;IAAA,CAAC;IAvBF;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sEACsB;IAFzB,iBAAiB;QADrC,OAAO;OACa,iBAAiB,CA0BrC;IAAD,wBAAC;CA1BD,AA0BC,CA1B8C,EAAE,CAAC,SAAS,GA0B1D;kBA1BoB,iBAAiB","file":"","sourceRoot":"../../../../../assets/core/Board","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BoardMapComponent extends cc.Component {\n    @property(cc.Prefab)\n    positionIndicatorPrefab: cc.Prefab = null;\n    y: number;\n\n    protected onLoad(): void {\n        this.node.on('INIT', this.init, this);\n    };\n\n    protected init(): void {\n        const { BOARD_FORMAT, BORDER_LEFT_BOARD, BORDER_TOP_BOARD, STEP } = (this.node as any).config;\n        const BOARD_LENGTH_COLUMN = BOARD_FORMAT.length;\n        const BOARD_LENGTH_ROW = BOARD_FORMAT[0];\n\n\n        for (let col = 0; col < BOARD_LENGTH_COLUMN; col++) {\n            for (let row = 0; row < BOARD_LENGTH_ROW; row++) {\n                const xPos = BORDER_LEFT_BOARD + col * STEP;\n                const yPos = BORDER_TOP_BOARD - row * STEP;\n\n                const positionIndicatorNode = cc.instantiate(this.positionIndicatorPrefab);\n                positionIndicatorNode.parent = this.node;\n                positionIndicatorNode.setPosition(cc.v2(xPos, yPos));\n            }\n        }\n    };\n}\n"]}