{"version":3,"sources":["BoardMapHolder.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAA4C,kCAAY;IADxD;QAAA,qEAiCC;QA9BG,6BAAuB,GAAc,IAAI,CAAC;;IA8B9C,CAAC;IA3Ba,+BAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAAA,CAAC;IAEQ,6BAAI,GAAd;QACU,IAAA,qBAAuF,EAArF,8BAAY,EAAE,wCAAiB,EAAE,sCAAgB,EAAE,cAAkC,CAAC;QAC9F,IAAM,mBAAmB,GAAG,YAAY,CAAC,MAAM,CAAC;QAChD,IAAM,gBAAgB,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEhD,IAAM,YAAY,GAAG,iBAAiB,CAAC;QACvC,IAAM,YAAY,GAAG,gBAAgB,CAAC;QACtC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC,GAAG,IAAI,CAAC;YAC7C,IAAI,KAAK,KAAK,CAAC,iBAAiB,EAAE;gBAC9B,IAAI,CAAC,CAAC,EAAE,CAAC;aACZ;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAE3C,IAAM,qBAAqB,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAC3E,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACzC,qBAAqB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC/C;IAGL,CAAC;IAAA,CAAC;IA7BF;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mEACsB;IAFzB,cAAc;QADlC,OAAO;OACa,cAAc,CAgClC;IAAD,qBAAC;CAhCD,AAgCC,CAhC2C,EAAE,CAAC,SAAS,GAgCvD;kBAhCoB,cAAc","file":"","sourceRoot":"../../../../assets/core","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BoardMapHolder extends cc.Component {\n    @property(cc.Prefab)\n    positionIndicatorPrefab: cc.Prefab = null;\n    y: number;\n\n    protected onLoad(): void {\n        this.node.on('INIT', this.init, this);\n    };\n\n    protected init(): void {\n        const { BOARD_FORMAT, BORDER_LEFT_BOARD, BORDER_TOP_BOARD, STEP } = (this.node as any).config;\n        const BOARD_LENGTH_COLUMN = BOARD_FORMAT.length;\n        const BOARD_LENGTH_ROW = BOARD_FORMAT.length[0];\n\n        const startOffsetX = BORDER_LEFT_BOARD;\n        const startOffsetY = BORDER_TOP_BOARD;\n        this.y = 0;\n        for (let i = 0; i < BOARD_LENGTH_COLUMN; i++) {\n            let xStep = (i % BOARD_LENGTH_COLUMN) * STEP;\n            if (xStep === -BORDER_LEFT_BOARD) {\n                this.y++;\n            }\n            let yStep = this.y * STEP;\n            const position = new cc.Vec2(xStep, yStep);\n\n            const positionIndicatorNode = cc.instantiate(this.positionIndicatorPrefab);\n            positionIndicatorNode.parent = this.node;\n            positionIndicatorNode.setPosition(position);\n        }\n\n\n    };\n}\n"]}